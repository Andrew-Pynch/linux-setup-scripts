alias gomass='cd /media/andrew/mass/Github'
alias jl='jupyter-lab'
alias jn='jupyter-notebook'
alias fs='xdg-open .'
alias templ-disabled='/home/andrew/Github/Ishiiruka/build/Binaries/dolphin-emu'
alias dol='dolphin-emu'
alias bse='vim ~/.bashrc'
alias sshosu="ssh 'pyncha@oregonstate.edu'@flip.engr.oregonstate.edu"
alias gmf="cd /mnt/c/Users/HZYJ10/Git/GM" 
alias pgf="cd ~/Github"
alias peg="cd /mnt/e/Github"
alias start='/mnt/c/Windows/System32/cmd.exe /c "start ."'
alias clr='rm -rf *'
alias wthr='curl wttr.in'
alias ubrc='UpdateBashRC'
alias govids='cd /mnt/d/Video'
alias mkvid='MakeVideo'
alias mono='cd ~/Github/PX_Mono'
alias monoa='cd ~/Github/PX_Mono/apps/middleware/functions'
alias kp='KillPort'
alias restartaudio='pulseaudio -k && sudo alsa force-reload'
alias restartfakecamera='RebootFakeCamera'

RebootFakeCamera() {
    # Remove the fake camera 
    sudo modprobe --remove v4l2loopback

    # Add the fake device back 
    sudo modprobe v4l2loopback card_label="My Fake Webcam" exclusive_caps=1

    echo 'Successfully rebooted My Fake Webcam'
}

KillPort() {
    fuser -k $1/tcp
}

UpdateBashRC() {
    cd ~/linux-setup-scripts 
    ./mvBash.sh
    bash
}

MakeVideo() {
    mkdir $1
    cd $1
    mkdir Clips
    mkdir Images
    mkdir Music
    mkdir Audio
    mkdir Footage
}


alias gcl='CloneAndrewRepo'
alias gpl='git pull'
alias gaa='git add --all'
alias gam='git commit -a -m'
alias gpu='git push'
alias gba='git branch -a'
alias gb='git branch'
alias gc='git checkout'
alias gbgc='BranchAndCheckout'
alias gm='git merge'
alias gpsu='PushBranchSetUpstream'
alias gl='git log'
alias gsa='git stash --all'
alias gbsc='git branch --show-current'
alias sa='ShowAliases'
alias inr='InitNewRepo'
alias grh='ResetCommitHash'
alias gbdl='GitBranchDeleteLocal'
alias gbdo='GitBranchDeleteOrigin'
alias editbashrc='nvim ~/Linux-Setup-Scripts/linux/.bashrc'
alias srcbashrc='source ~/.bashrc'
alias reseti3="ResetI3"
alias napifold="NewApiFolder"
alias setupmonitors="sh ~/Linux-Setup-Scripts/scripts/setup_monitors.sh"


NewApiFolder() {
    mkdir $1 
    cd $1 
    touch $1Helpers.ts 
    touch $1Requests.ts 
    touch $1Schema.ts 
}

ResetI3() {
    i3-msg reload 
    i3-msg restart
}

GitBranchDeleteLocal() {
    git branch -d $1
}

GitBranchDeleteOrigin() {
    git push origin --delete $1
}

PushBranchSetUpstream() {
    git push --set-upstream origin $1
}

BranchAndCheckout() {
    git branch $1 && git checkout $1
}

InitNewRepo() {
    mkdir $1
    cd $1
    git init
    touch README.md 
    git add --all
    git commit -a -m "Add README.md"
}

ResetCommitHash() {
    git reset --hard $1
    git reset --soft HEAD@{1}
    git commit -a -m "Revert head..."
    git push
}

# Clone a repo of a given name from my github
CloneAndrewRepo() {
	git clone 'https://github.com/andrew-pynch/'$1
	cd $1
}

# Export custom prompt 
# parse_git_branch() {
#      git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
# }
# export PS1="\[\033[38;5;41m\]\w\[$(tput sgr0)\]:\[\033[38;5;63m\]\$(parse_git_branch)\[$(tput sgr0)\]$\[$(tput sgr0)\] "

neofetch --ascii_distro ubuntu

eval `dircolors /home/andrew/.dir_colors/dircolors`